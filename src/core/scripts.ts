import {
  applyParamsToScript,
  SpendingValidator,
  WithdrawalValidator,
} from "lucid-cardano";
import { getLucid } from "./utils/utils.ts";

function bytesToScript(bytes: string) {
  const script: SpendingValidator = {
    type: "PlutusV2",
    script: bytes,
  };
  return script;
}

export async function getParamertizedLoanValidator() {
  const lucid = await getLucid();
  const loanScriptCBOR =
    "5901b3010000323232323232223232232253330083253330093006300a3754008264660020026eacc038c03cc03cc03cc03cc03cc03cc030dd5180118061baa00322533300e00114a0264a66601866ebc02cc034c0400085288998018018009808000899199119198008008019129998088008a50132533300f3371e6eb8c04c00801052889980180180098098009bac3001300c3754600460186ea800cdd7180098061baa0082300e300f300f300f300f300f300f300f300f0012300d00114984d958c94ccc01cc01000454ccc028c024dd50010a4c2c2a66600e66e1d20020011533300a300937540042930b0b18039baa0013253330053002300637540062646464646464646464646464646464646464a6660346038004264646493180a804980a00618098078b1bae301a001301a002375a603000260300046eb4c058004c058008c050004c050008dd698090009809001180800098080011bad300e001300e002300c001300c002375a6014002600e6ea800c5894ccc014c008c018dd5000899191919299980618070010a4c2c6eb8c030004c030008dd7180500098039baa00116370e90002b9a5573aaae7955cfaba157441";

  const loanStakingCbor =
    "5908bb010000323232323232322322322322322533300a3253323300c3001300d37546004601c6ea800c4c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c04ccc008008ccc00c00cc8ccc0040040092f5c0444a66604a0042002266600600660500046464a6660486032604a6ea80044c8c8c94ccc09cc06cc0a0dd500089919816180a998161ba8337006eb4c068c0a8dd500099980a1bab301e302a375400c6eb8c068c0a8dd5180f18151baa004375c603c60546ea8c078c0a8dd500219816180f18151baa0043302c375066e00dd6980698151baa004375a601a60546ea8004cc0b0c044c0a8dd5002198161ba8337006eb4c05cc0a8dd50021bad3017302a375400266058602460546ea8010cc0b0c040c0a8dd500219816180998151baa0044bd701980c003919981499b8f375c602060566ea8004dd7180898159baa0054a0944c0b0c0a4dd5000899815980a198159ba83330133756603a60526ea8014dd7180c98149baa301d302937540066eb8c074c0a4dd5180e98149baa0033302b301d3029375400666056601860526ea800ccc0acc040c0a4dd500199815980b18149baa0033302b30113029375400666056601e60526ea800ccc0acc048c0a4dd5001a5eb80018c8cc004004018894ccc0ac004530103d87a800013232533302a533302a3371e6eb8c044c0b0dd50011bae3012302c375400c2a66605466ebcc080c0b0dd5001181018161baa0061533302a3375e602660586ea8008c04cc0b0dd50030a99981519baf3014302c3754004602860586ea80184cdc39bad3015302c37540046eb4c054c0b0dd50030a5014a029405280980b9981700125eb804cc010010004c0bc008c0b4004c02c004c0a4c098dd50008b180418129baa001301830243754604e0046644646600200200644a66604c002297ae01323253330253013302637540022660080080042660526054604e6ea8004cc010010008c8c94ccc098c06cc09cdd5000899191919192999815a99981599baf301c302d375400a6038605a6ea8c074c0b4dd50110a9998158018a99981580108008a5014a029404c060cc0bcc060cc0bcc074c0b4dd500299817981098169baa0053302f375066602e6eacc084c0b4dd50039bae301d302d37546020605a6ea8014dd7181098169baa3010302d375400a6605e6020605a6ea8014cc0bcc050c0b4dd500299817980d18169baa0053302f3016302d375400a6605e602a605a6ea80152f5c097ae014c0103d87a80003370e6eb4c048c0b0dd50021bad3020302c375401466e1cdd6981718179817981798179817981798179817981798159baa003375a603660566ea8024cdc39bad300f302a375400464a666052602e60546ea80044dd6981718159baa00116301a302a3754603460546ea8c04cc0a8dd5180d18151baa01f5333027301b302837540022646464646464646464646464646464646464646464646464a666084608a004264646464932999821181b18219baa004132325333047304a002149858dd7182400098221baa004163034011303301430320151630430013043002375c608200260820046eb4c0fc004c0fc008dd6981e800981e8011bae303b001303b002375a607200260720046eb4c0dc004c0dc008c0d4004c0d4008dd69819800981980118188009818801181780098178011bad302d001302937540022c605660506ea800458c028c09cdd500098148011814800998079bac300430213754602260426ea80588c94ccc084c03cc088dd5000899b8f01f375c604c60466ea8004528180918111baa3012302237540026464666002002006980106d8799f0000ff00222533302600210011333003003302900232325333025301a30263754002264646028660566ea0cdc01bad30193029375400a6660266eacc074c0a4dd5180e98149baa004375c603260526ea8c074c0a4dd50011bae301d30293754603a60526ea8008cc0acdd419b80375a603a60526ea8014dd6980b18149baa0024bd701806000981518139baa001163009302637546034604c6ea8004c0a0008dd6180898109baa30113021375402c6601c6eb0c040c080dd5180818101baa0152325333020300e30213754002266e3c070dd7181298111baa00114a0602260426ea8c044c084dd5180a98109baa0012253330220011480004cdc02400466004004604a002444a6660440022004266600600664646600200200844a66604a002297ae01323253330243375e00400a2002266050004660080080026052004604e0026048002604a00246042604460440024a666036601e60386ea80044c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c94ccc0c0c0cc0084c8c8c9263022009302100c302000f16375c606200260620046eb4c0bc004c0bc008dd698168009816801181580098158011bad3029001302900230270013027002375a604a002604a004604600260460046eb4c084004c074dd50008b1180f9810181018101810181018100009180f180f980f980f980f980f980f980f980f8009180e980f180f180f0009180e180e980e980e980e980e8009180d980e180e180e180e180e180e180e00091119299980c1803180c9baa0011480004dd6980e980d1baa001325333018300630193754002298103d87a8000132330010013756603c60366ea8008894ccc074004530103d87a80001323232533301d3371e00e6eb8c07800c4c028cc084dd4000a5eb804cc014014008dd6980f0011810801180f800991980080080211299980e0008a6103d87a80001323232533301c3371e00e6eb8c07400c4c024cc080dd3000a5eb804cc014014008dd5980e8011810001180f0009ba548000dc3a40044602e603060306030603000244646600200200644a66602e002297ae0132325333016300500213301a00233004004001133004004001301b00230190012301530163016301630163016301630163016301630163016001230140012533300e3002300f3754002264646464a66602a60300042930b1bae30160013016002375c602800260206ea800458dc3a40006e1d200414a046020602200229309b2b1bad001375a0026eb8004dd7000ab9a5573aaae7955cfaba05742ae89";

  const loanStakingScript = bytesToScript(loanStakingCbor);
  const loanStakingValidatorHash =
    lucid.utils.validatorToScriptHash(loanStakingScript);
  const paramertizedLoanScript: SpendingValidator = {
    type: "PlutusV2",
    script: applyParamsToScript(loanScriptCBOR, [loanStakingValidatorHash]),
  };

  return paramertizedLoanScript;
}

export async function getLoanStakingValidator() {
  const loanStakingCbor =
    "5908bb010000323232323232322322322322322533300a3253323300c3001300d37546004601c6ea800c4c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c04ccc008008ccc00c00cc8ccc0040040092f5c0444a66604a0042002266600600660500046464a6660486032604a6ea80044c8c8c94ccc09cc06cc0a0dd500089919816180a998161ba8337006eb4c068c0a8dd500099980a1bab301e302a375400c6eb8c068c0a8dd5180f18151baa004375c603c60546ea8c078c0a8dd500219816180f18151baa0043302c375066e00dd6980698151baa004375a601a60546ea8004cc0b0c044c0a8dd5002198161ba8337006eb4c05cc0a8dd50021bad3017302a375400266058602460546ea8010cc0b0c040c0a8dd500219816180998151baa0044bd701980c003919981499b8f375c602060566ea8004dd7180898159baa0054a0944c0b0c0a4dd5000899815980a198159ba83330133756603a60526ea8014dd7180c98149baa301d302937540066eb8c074c0a4dd5180e98149baa0033302b301d3029375400666056601860526ea800ccc0acc040c0a4dd500199815980b18149baa0033302b30113029375400666056601e60526ea800ccc0acc048c0a4dd5001a5eb80018c8cc004004018894ccc0ac004530103d87a800013232533302a533302a3371e6eb8c044c0b0dd50011bae3012302c375400c2a66605466ebcc080c0b0dd5001181018161baa0061533302a3375e602660586ea8008c04cc0b0dd50030a99981519baf3014302c3754004602860586ea80184cdc39bad3015302c37540046eb4c054c0b0dd50030a5014a029405280980b9981700125eb804cc010010004c0bc008c0b4004c02c004c0a4c098dd50008b180418129baa001301830243754604e0046644646600200200644a66604c002297ae01323253330253013302637540022660080080042660526054604e6ea8004cc010010008c8c94ccc098c06cc09cdd5000899191919192999815a99981599baf301c302d375400a6038605a6ea8c074c0b4dd50110a9998158018a99981580108008a5014a029404c060cc0bcc060cc0bcc074c0b4dd500299817981098169baa0053302f375066602e6eacc084c0b4dd50039bae301d302d37546020605a6ea8014dd7181098169baa3010302d375400a6605e6020605a6ea8014cc0bcc050c0b4dd500299817980d18169baa0053302f3016302d375400a6605e602a605a6ea80152f5c097ae014c0103d87a80003370e6eb4c048c0b0dd50021bad3020302c375401466e1cdd6981718179817981798179817981798179817981798159baa003375a603660566ea8024cdc39bad300f302a375400464a666052602e60546ea80044dd6981718159baa00116301a302a3754603460546ea8c04cc0a8dd5180d18151baa01f5333027301b302837540022646464646464646464646464646464646464646464646464a666084608a004264646464932999821181b18219baa004132325333047304a002149858dd7182400098221baa004163034011303301430320151630430013043002375c608200260820046eb4c0fc004c0fc008dd6981e800981e8011bae303b001303b002375a607200260720046eb4c0dc004c0dc008c0d4004c0d4008dd69819800981980118188009818801181780098178011bad302d001302937540022c605660506ea800458c028c09cdd500098148011814800998079bac300430213754602260426ea80588c94ccc084c03cc088dd5000899b8f01f375c604c60466ea8004528180918111baa3012302237540026464666002002006980106d8799f0000ff00222533302600210011333003003302900232325333025301a30263754002264646028660566ea0cdc01bad30193029375400a6660266eacc074c0a4dd5180e98149baa004375c603260526ea8c074c0a4dd50011bae301d30293754603a60526ea8008cc0acdd419b80375a603a60526ea8014dd6980b18149baa0024bd701806000981518139baa001163009302637546034604c6ea8004c0a0008dd6180898109baa30113021375402c6601c6eb0c040c080dd5180818101baa0152325333020300e30213754002266e3c070dd7181298111baa00114a0602260426ea8c044c084dd5180a98109baa0012253330220011480004cdc02400466004004604a002444a6660440022004266600600664646600200200844a66604a002297ae01323253330243375e00400a2002266050004660080080026052004604e0026048002604a00246042604460440024a666036601e60386ea80044c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c94ccc0c0c0cc0084c8c8c9263022009302100c302000f16375c606200260620046eb4c0bc004c0bc008dd698168009816801181580098158011bad3029001302900230270013027002375a604a002604a004604600260460046eb4c084004c074dd50008b1180f9810181018101810181018100009180f180f980f980f980f980f980f980f980f8009180e980f180f180f0009180e180e980e980e980e980e8009180d980e180e180e180e180e180e180e00091119299980c1803180c9baa0011480004dd6980e980d1baa001325333018300630193754002298103d87a8000132330010013756603c60366ea8008894ccc074004530103d87a80001323232533301d3371e00e6eb8c07800c4c028cc084dd4000a5eb804cc014014008dd6980f0011810801180f800991980080080211299980e0008a6103d87a80001323232533301c3371e00e6eb8c07400c4c024cc080dd3000a5eb804cc014014008dd5980e8011810001180f0009ba548000dc3a40044602e603060306030603000244646600200200644a66602e002297ae0132325333016300500213301a00233004004001133004004001301b00230190012301530163016301630163016301630163016301630163016001230140012533300e3002300f3754002264646464a66602a60300042930b1bae30160013016002375c602800260206ea800458dc3a40006e1d200414a046020602200229309b2b1bad001375a0026eb8004dd7000ab9a5573aaae7955cfaba05742ae89";
  const loanScriptCBOR =
    "5901b3010000323232323232223232232253330083253330093006300a3754008264660020026eacc038c03cc03cc03cc03cc03cc03cc030dd5180118061baa00322533300e00114a0264a66601866ebc02cc034c0400085288998018018009808000899199119198008008019129998088008a50132533300f3371e6eb8c04c00801052889980180180098098009bac3001300c3754600460186ea800cdd7180098061baa0082300e300f300f300f300f300f300f300f300f0012300d00114984d958c94ccc01cc01000454ccc028c024dd50010a4c2c2a66600e66e1d20020011533300a300937540042930b0b18039baa0013253330053002300637540062646464646464646464646464646464646464a6660346038004264646493180a804980a00618098078b1bae301a001301a002375a603000260300046eb4c058004c058008c050004c050008dd698090009809001180800098080011bad300e001300e002300c001300c002375a6014002600e6ea800c5894ccc014c008c018dd5000899191919299980618070010a4c2c6eb8c030004c030008dd7180500098039baa00116370e90002b9a5573aaae7955cfaba157441";

  const stakingValidator: WithdrawalValidator = {
    type: "PlutusV2",
    script: applyParamsToScript(loanStakingCbor, [loanScriptCBOR]),
  };

  return stakingValidator;
}

export async function getParamertizedCollateralValidator() {
  const lucid = await getLucid();
  const collateralScriptCBOR =
    "5901fb0100003232323232322323223225333007533300730053008375400629404c8c94ccc024cc88c8cc00400400c894ccc040004528099299980719b8f375c602400400829444cc00c00c004c048004dd618069807180718071807180718071807180718071807180718059baa3002300b37540066eb8c034c038c038c038c038c038c038c038c038c038c02cdd500408008a50323371066e00dd6980698071807180718071807180718059baa008375a600260166ea8020c94ccc028cdc3a400460166ea80044dd6980718061baa001163002300b3754600460166ea8c004c02cdd5180118059baa0032300d300e300e300e300e300e300e300e0012300c00114984d958c94ccc018c01000454ccc024c020dd50010a4c2c2a66600c66e1d200200115333009300837540042930b0b18031baa00132533300430023005375400626464646464646464646464646464646464646464a666036603a004264646493180b806980b008180a8098b1bae301b001301b002375a603200260320046eb4c05c004c05c008dd6980a800980a8011bad3013001301300230110013011002375a601e002601e004601a002601a0046eb4c02c004c02c008c024004c018dd50018b12999802180118029baa001132323232533300b300d002149858dd7180580098058011bae3009001300637540022c6e1d20005734aae7555cf2ab9f5742ae881";

  const collateralStakingCbor = "5908bb010000323232323232322322322322322533300";

  const collateralStakingScript = bytesToScript(collateralStakingCbor);
  const collateralStakingValidatorHash = lucid.utils.validatorToScriptHash(
    collateralStakingScript
  );
  const paramertizedCollateralScript: SpendingValidator = {
    type: "PlutusV2",
    script: applyParamsToScript(collateralScriptCBOR, [
      collateralStakingValidatorHash,
    ]),
  };

  return paramertizedCollateralScript;
}
